<!-- 
  the "configuration" element also accepts a boolean "scan" attribute.
  enabling scans allows SLF4J to rescan a given config file and apply any
  changes!
 -->
<configuration debug="true">

  <!-- sets up a rotating mcidasv.log. every time mcidasv.log reaches 1MB, this
       will move mcidasv.log to mcidasv.1.log.zip and create a new mcidasv.log.
       the appender is configured to keep around (at most):
       
       mcidasv.log (active log file)
       mcidasv.1.log.zip 
       mcidasv.2.log.zip
       mcidasv.3.log.zip
       
       anything after mcidasv.3.log.zip is discarded. -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${mcv.userpath}/mcidasv.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <fileNamePattern>${mcv.userpath}/mcidasv.%i.log.zip</fileNamePattern>
      <minIndex>1</minIndex>
      <maxIndex>3</maxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>1MB</maxFileSize>
    </triggeringPolicy>
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %method: %msg%n</pattern>
    </encoder>
  </appender>

  <!-- you can override the root level for specific packages -->
  <!-- <logger name="edu.wisc.ssec.mcidasv" level="TRACE"/> -->

  <!-- logging is disabled within mcv (by default)
       valid levels are: TRACE, DEBUG, INFO, WARN, ERROR, OFF
       be sure to skim over http://logback.qos.ch/manual/architecture.html#basic_selection -->
  <root level="WARN">
    <appender-ref ref="FILE" />
  </root>
</configuration>