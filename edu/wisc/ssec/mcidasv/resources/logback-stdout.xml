<!-- 
  the "configuration" element also accepts a boolean "scan" attribute.
  enabling scans allows SLF4J to rescan a given config file and apply any
  changes!
 -->
<configuration debug="true">

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %method: %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="JYTHON" class="ch.qos.logback.core.FileAppender">
    <file>${mcv.userpath}/jython.log</file>
    <encoder>
      <!-- <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %method: %msg%n</pattern> -->
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger:%n%msg%n</pattern>
    </encoder>
   </appender>

  <!-- you can override the root level for specific packages -->
  <!-- <logger name="edu.wisc.ssec.mcidasv" level="TRACE"/> -->

  <!-- logging is disabled within mcv (by default)
       valid levels are: TRACE, DEBUG, INFO, WARN, ERROR, OFF
       be sure to skim over http://logback.qos.ch/manual/architecture.html#basic_selection -->
  <root level="OFF">
    <appender-ref ref="STDOUT" />
  </root>
  
  <logger name="jython" level="INFO">
    <!-- remember: jython is like a subclass of the root logger; including the STDOUT -->
    <!-- appender will only result in duplicate output. -->
    <!-- <appender-ref ref="STDOUT" /> -->
    <appender-ref ref="JYTHON" />
  </logger>
</configuration>